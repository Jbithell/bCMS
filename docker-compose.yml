version: '3'
services:
  db:
    image: mysql/mysql-server:5.7
    command: --default-authentication-plugin=mysql_native_password
    container_name: db
    volumes:
      - db_data:/var/lib/mysql
    restart: always
    environment:
      - MYSQL_DATABASE=nouse
      - MYSQL_USER=nouse
      - MYSQL_ROOT_HOST=%
    env_file:
      - nouseprod.env
    networks:
      - app
  nouse:
    image: nouse
    container_name: nouse-container
    ports:
      - 80:80
      - 443:443
    restart: always
    depends_on:
      - db
    networks:
      - app
    environment:
      - MYSQL_HOSTNAME=db
      - MYSQL_DATABASE=nouse
      - MYSQL_USER=nouse
    env_file:
      - nouseprod.env
  phpmyadmin:
    image: phpmyadmin/phpmyadmin:5.0
    container_name: phpmyadmin
    environment:
      - PMA_ARBITRARY=0
      - PMA_HOST=db
      - PMA_PORT=3306
    restart: always
    ports:
      - 8081:80
    depends_on:
      - db
    networks:
      - app
    volumes:
      - /sessions
  mysql-backup:
     image: databack/mysql-backup:latest
     container_name: mysql-backup
     environment:
       - DB_SERVER=db
       - DB_PORT=3306
       - DB_USER=nouse
       - DB_NAMES=nouse
       - DB_DUMP_FREQ=1440 #Daily
       - DB_DUMP_BEGIN=0230 #2:30am
       - COMPRESSION=gzip
       - NICE=true
     env_file:
       - nouseprod.env
     networks:
       - app
     depends_on:
       - db
     volumes:
       - /etc/localtime:/etc/localtime:ro
  netdata:
    image: netdata/netdata
    container_name: netdata
    ports:
      - 8080:19999
    restart: unless-stopped
    cap_add:
      - SYS_PTRACE
    security_opt:
      - apparmor:unconfined
    networks:
      - monitoring
    volumes:
      - netdataconfig:/etc/netdata
      - netdatalib:/var/lib/netdata
      - netdatacache:/var/cache/netdata
      - /etc/passwd:/host/etc/passwd:ro
      - /etc/group:/host/etc/group:ro
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /etc/os-release:/host/etc/os-release:ro

volumes:
  netdataconfig:
  netdatalib:
  netdatacache:
  db_data: { }
networks:
  app:
  monitoring:
